{"version":3,"sources":["components/search-panel/search-panel.js","components/add-form/add-form.js","components/table-item/table-item.js","components/table-header/table-header.js","components/info-panel/info-panel.js","components/table/table.js","components/app/app.js","index.js"],"names":["SearchPanel","props","state","inputSearchValue","onUpdateSearch","bind","e","value","target","this","setState","data","searchRows","onUpdateSearchValue","className","type","placeholder","onChange","onClick","Component","AddForm","id","firstName","lastName","email","phone","show","hide","btnClass","onChangeAddValue","onSubmit","stateEl","preventDefault","addItem","TableItem","name","surname","tel","address","description","TableHeader","up","down","changeSortStatusUp","changeSortStatusUpDown","index","onSortUp","onSortDown","line","title","selector","scope","InfoPAnel","info","showInfo","onCloseInfo","toUpperCase","slice","role","aria-hidden","user","city","zip","Table","onShowInfo","keyName","newData","sort","a","b","tableItem","streetAddress","sorted","elements","map","item","App","getResourse","checkRepeatedId","then","response","url","fetch","ok","Error","status","json","uniqueId","filter","el","includes","push","length","Object","entries","join","toLocaleLowerCase","indexOf","toLowerCase","newRow","checked","visiblePosts","class","changeAny","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9268915.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            inputSearchValue: \"\"\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e){\r\n        const value = e.target.value;\r\n        this.setState({inputSearchValue: value});\r\n    }\r\n\r\n    render(){\r\n        const {data, searchRows, onUpdateSearchValue} = this.props;\r\n        const {inputSearchValue } = this.state;\r\n\r\n        return (\r\n            <div className=\"input-group mb-3\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Write here what you want to search\"\r\n                    className=\"form-control\"\r\n                    onChange={this.onUpdateSearch}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    placeholder=\"Write down your minds\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => {\r\n                        onUpdateSearchValue(inputSearchValue); \r\n                        searchRows(data, inputSearchValue)\r\n                    }}\r\n                >SEARCH\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n};","import React, { Component } from 'react';\r\n\r\nexport default class AddForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            id: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n        }\r\n\r\n        this.show = \"btn btn-secondary\"\r\n        this.hide = `${this.show} d-none`;\r\n        this.btnClass = \"\";\r\n\r\n        this.onChangeAddValue = this.onChangeAddValue.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChangeAddValue(e, stateEl){\r\n        const value = e.target.value;\r\n        this.setState(() => {\r\n            return {[stateEl]: value} \r\n        });\r\n    }\r\n\r\n    onSubmit(e, id, firstName, lastName, email, phone){\r\n        e.preventDefault();\r\n        if(id !== \"\" && firstName !== \"\" && lastName !== \"\" && email !== \"\" && phone !== \"\"){\r\n            this.props.addItem(id, firstName, lastName, email, phone);\r\n            this.setState({id: \"\", firstName: \"\", lastName: \"\", email: \"\", phone: \"\"});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {id, firstName, lastName, email, phone} = this.state;\r\n\r\n        if(id !== \"\" && firstName !== \"\" && lastName !== \"\" && email !== \"\" && phone !== \"\"){\r\n            this.btnClass = this.show;\r\n        } else {\r\n            this.btnClass = this.hide;\r\n        }\r\n\r\n        return (\r\n            <form \r\n                className=\"input-group mb-3\"\r\n                onSubmit={(e) => this.onSubmit(e, id, firstName, lastName, email, phone)}\r\n            >               \r\n                <input \r\n                    type=\"number\"\r\n                    value={id}\r\n                    placeholder=\"id\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => {this.onChangeAddValue(e, \"id\")}}\r\n                />\r\n                <input \r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    placeholder=\"First name\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => {this.onChangeAddValue(e, \"firstName\")}}\r\n                />\r\n                <input \r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    placeholder=\"Last name\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.onChangeAddValue(e, \"lastName\")}\r\n                />\r\n                <input \r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.onChangeAddValue(e, \"email\")}\r\n                />\r\n                <input \r\n                    type=\"tel\"\r\n                    value={phone}\r\n                    placeholder=\"Phone\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => this.onChangeAddValue(e, \"phone\")}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className={this.btnClass}\r\n                >Add to table</button>\r\n            </form>\r\n        );\r\n    }\r\n};","import React, {Component} from 'react';\r\n\r\nexport default class TableItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render(){\r\n        const {id, name, surname, email, tel, address, description} = this.props;\r\n        \r\n        return(\r\n            <>\r\n                <th><div className=\"col\">{id}</div></th>\r\n                <td><div className=\"col\">{name}</div></td>\r\n                <td><div className=\"col\">{surname}</div></td>\r\n                <td><div className=\"col\">{email}</div></td>\r\n                <td><div className=\"col\">{tel}</div></td>\r\n                <td><div className=\"col\">{address}</div></td>\r\n                <td><div className=\"col\">{description}</div></td>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport \"./table-header.css\";\r\n\r\nexport default class TableHeader extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            up: { id: \"\", firstName: \"\", lastName: \"\", email: \"\", phone: \"\", description: \"\" },\r\n            down: { id: \"\", firstName: \"\", lastName: \"\", email: \"\", phone: \"\", description: \"\" }\r\n        }\r\n\r\n        this.changeSortStatusUp = this.changeSortStatusUp.bind(this);\r\n        this.changeSortStatusUpDown = this.changeSortStatusUpDown.bind(this);\r\n    }\r\n\r\n    changeSortStatusUp(index) {\r\n        const sorted = \" sorted\";\r\n        const noSorted = \"\";\r\n        this.setState({ up: { [index]: sorted }, down: { [index]: noSorted } })\r\n    }\r\n\r\n    changeSortStatusUpDown(index) {\r\n        const sorted = \"sorted\";\r\n        const noSorted = \"\";\r\n        this.setState({ up: { [index]: noSorted }, down: { [index]: sorted } })\r\n    }\r\n\r\n    render() {\r\n        const {data, onSortUp, onSortDown} = this.props;\r\n        const {up, down} = this.state;\r\n\r\n        const line = (title, selector, data, up, down) => {\r\n            return (\r\n                <th scope=\"col\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"col\">{title}</div>\r\n                        <div className=\"d-flex\">\r\n                            <span\r\n                                className={`sort ${up[selector]}`}\r\n                                onClick={() => { onSortUp(data, selector); this.changeSortStatusUp(selector) }}>\r\n                                <i className=\"fa fa-sort-up\"></i>\r\n                            </span>\r\n                            <span\r\n                                className={`sort ${down[selector]}`}\r\n                                onClick={() => { onSortDown(data, selector); this.changeSortStatusUpDown(selector) }}>\r\n                                <i className=\"fa fa-sort-down\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </th>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <tr>\r\n                {line('ID', \"id\", data, up, down)}\r\n                {line('Name', \"firstName\", data, up, down)}\r\n                {line('Surname', \"lastName\", data, up, down)}\r\n                {line('Email', \"email\", data, up, down)}\r\n                {line('Phone number', \"phone\", data, up, down)}\r\n                <th><div className=\"col\">Address</div></th>\r\n                {line('Description', \"description\", data, up, down)}\r\n            </tr>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class InfoPAnel extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        const {info, showInfo, onCloseInfo} = this.props;\r\n        const description = info.description[0].toUpperCase() + info.description.slice(1);\r\n\r\n        let className = \"hide\";\r\n\r\n        if(showInfo){\r\n            className = \"d-block\";\r\n        }\r\n\r\n        return (\r\n            <div className={`alert alert-dark  ${className}`} role=\"alert\">\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"close\" \r\n                    onClick={onCloseInfo}\r\n                >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <h4 className=\"alert-heading\">{info.user}</h4>\r\n                <div><b>Description:</b> \r\n                    <div>{description}</div>\r\n                </div>\r\n                <div><b>Address:</b> {info.address}</div>\r\n                <div><b>City:</b> {info.city}</div>\r\n                <div><b>State:</b> {info.state}</div>\r\n                <div><b>Zip:</b> {info.zip}</div>\r\n            </div>\r\n        )\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport TableItem from \"../table-item/table-item\";\r\nimport TableHeader from \"../table-header/table-header\";\r\nimport InfoPanel from \"../info-panel/info-panel\";\r\n\r\nexport default class  Table extends Component  {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            info: { user: \"\", description: \" \", address: \"\", city: \"\", state: \"\", zip: \"\" },\r\n            showInfo: false\r\n        }\r\n\r\n        this.onSortUp = this.onSortUp.bind(this);\r\n        this.onSortDown = this.onSortDown.bind(this);\r\n        this.onShowInfo = this.onShowInfo.bind(this);\r\n        this.onCloseInfo = this.onCloseInfo.bind(this);\r\n    }   \r\n\r\n    onSortUp(data, keyName) {\r\n        const newData = data.sort(function (a, b) {\r\n            if (a[keyName] > b[keyName]) {\r\n                return 1;\r\n            }\r\n            if (a[keyName] < b[keyName]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        this.setState({ data: newData })\r\n    }\r\n\r\n    onSortDown(data, keyName) {\r\n        const newData = data.sort(function (a, b) {\r\n            if (a[keyName] > b[keyName]) {\r\n                return -1;\r\n            }\r\n            if (a[keyName] < b[keyName]) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        this.setState({ data: newData })\r\n    }\r\n\r\n    onShowInfo(tableItem){\r\n        this.setState(() => {\r\n            const user = `${tableItem.firstName} ${tableItem.lastName}`;\r\n            const description = tableItem.description;\r\n            const address = tableItem.address.streetAddress;\r\n            const city = tableItem.address.city;\r\n            const state = tableItem.address.state;\r\n            const zip = tableItem.address.zip;\r\n            const show = true;\r\n\r\n            return ({\r\n                info: {\r\n                    user: user,\r\n                    description: description,\r\n                    address: address,\r\n                    city: city,\r\n                    state: state,\r\n                    zip: zip\r\n                },\r\n                showInfo: show\r\n            })\r\n        })\r\n    }\r\n\r\n    onCloseInfo(){\r\n        const hidden = false;\r\n        this.setState({showInfo: hidden})\r\n    }\r\n\r\n    render() {\r\n        const {data, sorted} = this.props;\r\n        const {info, showInfo} = this.state;\r\n\r\n        let elements = data.map(item => {          \r\n            return(\r\n                <tr \r\n                    key={item.id} \r\n                    onClick={() => this.onShowInfo(item)}\r\n                >\r\n                    <TableItem\r\n                        id={item.id}\r\n                        name={item.firstName}\r\n                        surname={item.lastName}\r\n                        email={item.email}\r\n                        tel={item.phone}\r\n                        address={`\r\n                            ${item.address.streetAddress} \r\n                            ${item.address.city} \r\n                            ${item.address.state} \r\n                            ${item.address.zip}\r\n                        `}\r\n                        description={item.description}\r\n                    />\r\n                </tr>\r\n            );\r\n        })\r\n    \r\n        return(\r\n            <div>\r\n                <InfoPanel\r\n                    info={info}\r\n                    onCloseInfo={this.onCloseInfo}\r\n                    showInfo={showInfo}\r\n                />\r\n                <table className=\"table-secondary table-bordered table-hover\">\r\n                    <thead>\r\n                        <TableHeader\r\n                            data={data}\r\n                            sorted={sorted}\r\n                            onSortUp={this.onSortUp}\r\n                            onSortDown={this.onSortDown}    \r\n                        />\r\n                    </thead>\r\n                    <tbody>\r\n                        {elements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport SearchPanel from \"../search-panel/search-panel\";\r\nimport AddForm from \"../add-form/add-form\";\r\nimport Table from \"../table/table\";\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            sorted: \"no\",\r\n            inputSearchValue: \"\",\r\n        }\r\n\r\n        this.getResourse = this.getResourse.bind(this);\r\n        this.checkRepeatedId = this.checkRepeatedId.bind(this);\r\n        this.onUpdateSearchValue = this.onUpdateSearchValue.bind(this);\r\n        this.searchRows = this.searchRows.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n\r\n        this.getResourse(\"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\")\r\n            .then(response => {\r\n                this.setState({ data: response })\r\n            })\r\n    }\r\n\r\n    async getResourse(url) {\r\n        let response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error(`Error uploading from ${url}, status: ${response.status}`);\r\n        }\r\n        return await response.json()\r\n    }\r\n\r\n    checkRepeatedId(data) {\r\n        const uniqueId = [];\r\n        let newArray = data.filter(el => {\r\n            if (uniqueId.includes(el.id)) return;\r\n            uniqueId.push(el.id);\r\n            return true;\r\n        })\r\n        return newArray;\r\n    }\r\n\r\n    onUpdateSearchValue(value){\r\n        this.setState({inputSearchValue: value})\r\n    }\r\n\r\n    searchRows(data, value){\r\n        if(value.length === 0){\r\n            return data\r\n        } \r\n            return data.filter(item => {\r\n                const str = Object.entries(item).map(([key, value]) => value).join(\"\").toLocaleLowerCase();\r\n\r\n                if(str.indexOf(value.toLowerCase()) > -1){\r\n                    return item\r\n                }\r\n            });\r\n    }\r\n\r\n    addItem(id, firstName, lastName, email, phone){\r\n        const newRow = {\r\n            id: id,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            phone: phone,\r\n            address: {streetAddress:\"\", city:\"\", state:\"\", zip:\"\"},\r\n            description: \" \"\r\n        }\r\n        this.setState(({data}) => {\r\n            const newData = [ newRow, ...data];\r\n            return ( {data: newData} )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {data, sorted, inputSearchValue, info, showInfo} = this.state;\r\n\r\n        const checked = this.checkRepeatedId(data);\r\n        const visiblePosts = this.searchRows(checked, inputSearchValue);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1><span class=\"badge badge-secondary\">User list</span></h1>\r\n                <SearchPanel\r\n                    data={visiblePosts}\r\n                    onUpdateSearchValue={this.onUpdateSearchValue}\r\n                    searchRows={this.searchRows}\r\n                />\r\n                <AddForm\r\n                    addItem={this.addItem}\r\n                />\r\n                <Table\r\n                    data={visiblePosts}\r\n                    sorted={sorted}\r\n                    changeAny={this.changeAny}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport \"./index.css\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}